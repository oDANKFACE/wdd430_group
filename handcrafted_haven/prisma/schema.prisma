// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Int
  images      String[]
  category    String
  seller      SellerProfile @relation(fields: [sellerId], references: [id])
  sellerId    String        @db.ObjectId
  reviews     Review[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Review {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  rating          Int
  comment         String?
  product         Product?       @relation(fields: [productId], references: [id])
  productId       String?        @db.ObjectId
  author          User           @relation(fields: [authorId], references: [id])
  authorId        String         @db.ObjectId
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  sellerProfile   SellerProfile? @relation(fields: [sellerProfileId], references: [id])
  sellerProfileId String?        @db.ObjectId
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  email         String         @unique
  password      String
  role          Role           @default(USER)
  firstName     String
  lastName      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isLocked      Boolean        @default(false)
  loginCount    Int            @default(0)
  reviews       Review[]
  sellerProfile SellerProfile?
}

model SellerProfile {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bio       String?
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @unique @db.ObjectId
  products  Product[]
  reviews   Review[]
}

enum Role {
  USER
  ADMIN
}
